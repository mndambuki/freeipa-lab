---
- name: Playbook to manage HBAC rules
  hosts: ipaserver:ipareplicas
  become: true
  gather_facts: false
  run_once: true
  tasks:
    - name: Create FreeIPA HBAC rules
      ipahbacrule:
        ipaadmin_principal: "{{ ipaadmin_principal | default(omit) }}"
        ipaadmin_password: "{{ ipaadmin_password | mandatory }}"
        name: "{{ ipa_hbac_rule.name | mandatory }}"
        user: "{{ ipa_hbac_rule.source.users | default(omit) }}"
        group: "{{ ipa_hbac_rule.source.groups | default(omit) }}"
        userategory: "{{ ipa_hbac_rule.source.userategory | default(omit) }}"
        host: "{{ ipa_hbac_rule.destination.hosts | default(omit) }}"
        hostgroup: "{{ ipa_hbac_rule.destination.hosts_groups | default(omit) }}"
        hostcategory: "{{ ipa_hbac_rule.destination.hostcategory | default(omit) }}"
        hbacsvc: "{{ ipa_hbac_rule.destination.services | default(omit) }}"
        hbacsvcgroup: "{{ ipa_hbac_rule.destination.services_groups | default(omit) }}"
        servicecategory: "{{ ipa_hbac_rule.destination.servicecategory | default(omit) }}"
      loop:
        "{{ ipa_hbac_rules }}"
      loop_control:
        loop_var: ipa_hbac_rule
      when: >
        ipa_hbac_rule.state is not defined or
        ipa_hbac_rule.state == "present"

    - name: Delete FreeIPA HBAC rules
      ipahbacrule:
        ipaadmin_principal: "{{ ipaadmin_principal | default(omit) }}"
        ipaadmin_password: "{{ ipaadmin_password | mandatory }}"
        name: "{{ ipa_hbac_rule.name | mandatory }}"
        state: "{{ ipa_hbac_rule.state }}"
      loop:
        "{{ ipa_hbac_rules }}"
      loop_control:
        loop_var: ipa_hbac_rule
      when:
        - ipa_hbac_rule.state is defined
        - ipa_hbac_rule.state != "present"